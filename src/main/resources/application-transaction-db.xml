<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/aop
						   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						   http://www.springframework.org/schema/jdbc
						   http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<context:property-placeholder location="classpath:app.properties" />
	<context:component-scan base-package="com.tvo.service,com.tvo.dao" />
	
	<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" name="namedParameterJdbcTemplate">
		<constructor-arg ref="tvoDataSource"/>
	</bean>
	
	<bean id="tvoDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${tvo.jdbc.driverClassName}" />
		<property name="url" value="${tvo.jdbc.url}" />
		<property name="username" value="${tvo.jdbc.username}" />
		<property name="password" value="${tvo.jdbc.password}" />
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="tvoDataSource" />
	</bean>

	<bean id="simpleAssetRootdataMapper" class="org.sakaiproject.genericdao.springjdbc.SimpleDataMapper">
		<property name="persistentClassname" value="com.tvo.entity.AssetRoot" />
		<property name="tableName" value="asset_root" />
	</bean>

	<bean id="simpleAssetViedodataMapper" class="org.sakaiproject.genericdao.springjdbc.SimpleDataMapper">
		<property name="persistentClassname" value="com.tvo.entity.AssetVideo" />
		<property name="tableName" value="asset_video" />
	</bean>

	<bean id="simpleDomainPublishMapper" class="org.sakaiproject.genericdao.springjdbc.SimpleDataMapper">
		<property name="persistentClassname" value="com.tvo.entity.DomainPublish" />
		<property name="tableName" value="domain_publish" />
	</bean>

	<bean id="simpleDomainNameMapper" class="org.sakaiproject.genericdao.springjdbc.SimpleDataMapper">
		<property name="persistentClassname" value="com.tvo.entity.DomainName" />
		<property name="tableName" value="domain_name" />
	</bean>
	
	<bean id="tvoJdbcGenericDao" class="com.tvo.dao.TvoJdbcGenericDaoImpl">
		<property name="dataSource" ref="tvoDataSource" />
		<property name="databaseType" value="MYSQL" />
		<property name="dataMappers">
			<list>
				<ref bean="simpleAssetRootdataMapper" />
				<ref bean="simpleAssetViedodataMapper" />
				<ref bean="simpleDomainPublishMapper" />
				<ref bean="simpleDomainNameMapper" />
			</list>
		</property>
	</bean>

</beans>
